#!/bin/bash -p
#set -x
[ $# -ge 0 ] || { echo "Must give at least 1 numeric byte" >&2 ; exit 1; }

main() \
{
  while [ $# -gt 0 ]
  do
    getcount $*
    n=$?
    checkothers $*
    case $n in
    0|1) v=$1 ;;
    2) v=$(((($1&31)<<6)|($2&63))) ;;
    3) v=$(((($1&15)<<12)|(($2&63)<<6)|($3&63))) ;;
    4) v=$(((($1&7)<<18)|(($2&63)<<12)|(($3&63)<<6)|($4&63)))
    esac
    if ((n==0)); then
      printf '0x%x ' $1
      n=1
    else
      printf 'U+%04X ' $v
    fi
    shift $n
  done
  echo
}

getcount() \
{
  ((($1&128)==0)) && return 1      # USASCII
  ((($1&64)==0)) && return 0       # 1st byte must start 11
  ((($1&32)==0)) && return 2       # 110xxxyy
  ((($1&16)==0)) && return 3       # 1110wwww
  ((($1&8)==0)) && return 4        # 11110uvv
  return 0                         # Too many 1 bits
}

checkothers() \
{
  local -
  set -e
  if [ $n -gt $# ]
  then
    n=0
    return
  fi
  shift
  for ((i=n-1; i>0; i--))
  do
    ((($1&0300)==0200)) || { n=0; return; }
    shift
  done
}

main $*
