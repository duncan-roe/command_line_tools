#!/bin/bash -p
#set -x
[ $# -ge 0 ] || { echo "Must give at least 1 Unicode codepoint" >&2 ; exit 1; }
u=$1
while [ -n "$u" ]
do
  shift
  [ ${u:0:1} = U -a "${u:1:1}" = + ] && u=${u:2}
  u=0x$u
  U=$u
  for ((i = 0; u ; i++))
  do
    v[$i]=$((u&15))
    u=$((u>>4))
  done
  if (($U < 0x80)); then
    b[0]=$U
    i=1                            # Count of bytes to print
  elif (($U < 0x800)); then
    b[1]=$((0xc0|(v[2]<<2)|(v[1]>>2)))
    b[0]=$((0x80|((v[1]&3)<<4)|v[0]))
    i=2
  elif (($U < 0x10000)); then
    b[2]=$((0xe0|v[3]))
    b[1]=$((0x80|(v[2]<<2)|(v[1]>>2)))
    b[0]=$((0x80|((v[1]&3)<<4)|v[0]))
    i=3
  elif (($U < 0x200000)); then
    b[3]=$((0xf0|(v[5]<<2)|(v[4]>>2)))
    b[2]=$((0x80|((v[4]&3)<<4)|v[3]))
    b[1]=$((0x80|(v[2]<<2)|(v[1]>>2)))
    b[0]=$((0x80|((v[1]&3)<<4)|v[0]))
    i=4
  else
    echo "$U is too large to be utf-8" >&2
    exit 1
  fi
  for ((i--; i >= 0; i--))
  do
    printf '0x%x ' ${b[$i]}
  done
  u=$1
done
echo
