The ggo entry became too long for the style of README, so I moved it here.

ggo drives gdb with arbitrary gdb commands on the command line. Usage is:-
    
    ggo <program name> [-a <rest of program invocation line>] [gdb command]...

I wrote ggo to let me quickly get back to where I has been in a gdb session
after I had trashed it e.g. by doing a "next" when I should have done a "step"
(into failing code). Doing it "quickly" relies on the shell's having a
command-line editor so the command may be re-issued without re-typing (e.g. bash
or ksh but not sh).
Actually ggo is short for Generic Go - it replaces go scripts I used to write
for individual programs.

ggo bypasses gdb's normal start-up file and inserts its own defaults, which you
can see and change during your session if you wish.

It's usually best to run ggo with the CWD being the one where you ran "make".
That way, gdb will normally find sources without further prompting; but if
required you can always put gdb "dir" commands on the command line.

The <rest of program invocation line> argument is for gdb's "run" command and
may contain redirection as well as command line arguments. For instance, to
debug my "q" editor (in a sibling repository), you want to interact with q in
one xterm and with gdb in another. To do this, find a free xterm (for q) and in
it enter "ps" to get the pts number. Suppose you find this xterm is pts/6, next
enter "sleep 3600" or whatever time you like in this xterm so the shell won't
take input away from q. Now in the xterm where you want to run gdb, enter e.g.
   ggo q -a "q.c >/dev/pts/6 </dev/pts/6" c
which debugs "q q.c" running in the q xterm. (ggo always sets a breakpoint on
main, hence the trailing "c").

The almost trivial example below demonstrates setting a breakpoint and printing
some variables when the breakpoint is hit. (The only reason for having 'b\ 49'
instead of '"b 49"' is that 'b\ 49' is shorter).

>>>>>>>>>>>>>>>>>>>>>>> Example starts
16:12:00$ pd ../findit
16:12:02$ make
make: `findit' is up to date.
16:12:09$ ggo findit -a "libc.so.6 printf" b\ 49 commands p\ sym p\ obj end c
spawn gdb -n
GNU gdb (GDB) 7.5
Copyright (C) 2012 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "i486-slackware-linux".
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
(gdb) file findit
Reading symbols from /home/dunc/command_line_tools/findit/findit...done.
(gdb) set print null-stop
(gdb) set print sevenbit-strings
(gdb) set print elements 0
(gdb) set height 0
(gdb) set print pretty
(gdb) set confirm off
(gdb) set unwindonsignal on
(gdb) b main
Breakpoint 1 at 0x8048796: file findit.c, line 41.
(gdb) run libc.so.6 printf
Starting program: /home/dunc/command_line_tools/findit/findit libc.so.6 printf
warning: Could not load shared library symbols for linux-gate.so.1.
Do you need "set solib-search-path" or "set sysroot"?

Breakpoint 1, main (argc=3, argv=0xbfffedb4) at findit.c:41
41        if (argc < 3)
(gdb) b 49
Breakpoint 2 at 0x80487fb: file findit.c, line 49.
(gdb) commands
Type commands for breakpoint(s) 2, one per line.
End with a line saying just "end".
>p sym
>p obj
>end
(gdb) c
Continuing.

Breakpoint 2, main (argc=3, argv=0xbfffedb4) at findit.c:49
49        for (i = 1; i < argc - 2; i++)
$1 = 0xbfffefb5 "printf"
$2 = 0xbfffefab "libc.so.6"
(gdb) n
77        handle = dlopen(obj, RTLD_LAZY);
(gdb) c
Continuing.
Found printf in libc.so.6 at 0xb7e7dd70
[Inferior 1 (process 6227) exited normally]
(gdb) q
16:12:41$ 
<<<<<<<<<<<<<<<<<<<<<<< Example ends

gdb's "commands" command specifies commands for the last breakpoint set in the
absence of a breakpoint number.
This is not the case for gdb's "condition" command: you always have to specify a
breakpoint number. In this case you need to be aware that breakpoints on the
ggo command line start at 2 (since ggo always does a "b main").
